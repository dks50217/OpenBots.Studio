/* 
 * OpenBots Server API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = OpenBots.Server.SDK.Client.SwaggerDateConverter;

namespace OpenBots.Server.SDK.Model
{
    /// <summary>
    /// AgentGroupMemberViewModel
    /// </summary>
    [DataContract]
        public partial class AgentGroupMemberViewModel :  IEquatable<AgentGroupMemberViewModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AgentGroupMemberViewModel" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="agentGroupId">agentGroupId.</param>
        /// <param name="agentId">agentId.</param>
        /// <param name="agentGroupName">agentGroupName.</param>
        /// <param name="agentName">agentName.</param>
        public AgentGroupMemberViewModel(Guid? id = default(Guid?), Guid? agentGroupId = default(Guid?), Guid? agentId = default(Guid?), string agentGroupName = default(string), string agentName = default(string))
        {
            this.Id = id;
            this.AgentGroupId = agentGroupId;
            this.AgentId = agentId;
            this.AgentGroupName = agentGroupName;
            this.AgentName = agentName;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid? Id { get; set; }

        /// <summary>
        /// Gets or Sets AgentGroupId
        /// </summary>
        [DataMember(Name="agentGroupId", EmitDefaultValue=false)]
        public Guid? AgentGroupId { get; set; }

        /// <summary>
        /// Gets or Sets AgentId
        /// </summary>
        [DataMember(Name="agentId", EmitDefaultValue=false)]
        public Guid? AgentId { get; set; }

        /// <summary>
        /// Gets or Sets AgentGroupName
        /// </summary>
        [DataMember(Name="agentGroupName", EmitDefaultValue=false)]
        public string AgentGroupName { get; set; }

        /// <summary>
        /// Gets or Sets AgentName
        /// </summary>
        [DataMember(Name="agentName", EmitDefaultValue=false)]
        public string AgentName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AgentGroupMemberViewModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AgentGroupId: ").Append(AgentGroupId).Append("\n");
            sb.Append("  AgentId: ").Append(AgentId).Append("\n");
            sb.Append("  AgentGroupName: ").Append(AgentGroupName).Append("\n");
            sb.Append("  AgentName: ").Append(AgentName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AgentGroupMemberViewModel);
        }

        /// <summary>
        /// Returns true if AgentGroupMemberViewModel instances are equal
        /// </summary>
        /// <param name="input">Instance of AgentGroupMemberViewModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AgentGroupMemberViewModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.AgentGroupId == input.AgentGroupId ||
                    (this.AgentGroupId != null &&
                    this.AgentGroupId.Equals(input.AgentGroupId))
                ) && 
                (
                    this.AgentId == input.AgentId ||
                    (this.AgentId != null &&
                    this.AgentId.Equals(input.AgentId))
                ) && 
                (
                    this.AgentGroupName == input.AgentGroupName ||
                    (this.AgentGroupName != null &&
                    this.AgentGroupName.Equals(input.AgentGroupName))
                ) && 
                (
                    this.AgentName == input.AgentName ||
                    (this.AgentName != null &&
                    this.AgentName.Equals(input.AgentName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.AgentGroupId != null)
                    hashCode = hashCode * 59 + this.AgentGroupId.GetHashCode();
                if (this.AgentId != null)
                    hashCode = hashCode * 59 + this.AgentId.GetHashCode();
                if (this.AgentGroupName != null)
                    hashCode = hashCode * 59 + this.AgentGroupName.GetHashCode();
                if (this.AgentName != null)
                    hashCode = hashCode * 59 + this.AgentName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
